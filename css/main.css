/* Cascading StyleSheets */
/* CSS selector */


/*Module 9 Exercise
Create a copy of your template folder and rename it to week9exercise.
Drag this new folder into your ‘week9’ folder inside your ‘codify’ folder.*/

When working through these exercises, there are bits and pieces of the instructions that are deliberately left out. You should start thinking about what you THINK you will need in order to accomplish the request.

/*In JS: 
Create an array with 5 different strings. 
Log the length OF YOUR ARRAY to the console.*/

/*In JS: 
Now log the length of EACH of the strings INSIDE your array to the console. 
How will you log the length of each item inside an array? 
DO NOT DO THIS WITH FIVE DIFFERENT CONSOLE.LOG COMMANDS.*/

/*In JS: 
Finally, reverse the array and console the array again. 
Has the array been reversed? 
What if we wanted to create a reversed COPY of the array?*/

In JS: 
Comment out your reverse function. 
Create a copy of your original array (do not simply re-type your array; create a new variable containing an empty array, and use .push() to add each item in your original array into the new, empty array). 
Now reverse the copied array.

In JS: 
Sort your array of strings alphabetically.

/*In JS: 
Create an array of at least 5 numbers. 
Each number should be at least two digits. 
Sort the array numerically, in ascending order (smallest to biggest). 
Then sort it in descending order.*/

/*In JS: */
/*Create an array with three strings.*/

/*In JS: */
/*Using array methods, add two new strings to the end of the array.*/

/*In JS: */
/*Now remove one string from the beginning of the array. 
Log the final array to the console. 
How many strings does it have?*/

In JS: 
Comment out all of your current code, and create a new, empty array stored in a variable.

/*In HTML: 
Create an input and a button element. 
Create an unordered list element.*/

In JS: 
Create a function which will run when the button is clicked. 
This function should add the value of the input to your empty array. 
THEN, your function should effectively loop through your array and append each item inside a list item to the unordered list in your HTML. It should do this correctly no matter how many strings are in your array (in other words, if your array has one string, you will see one list item; if your array has five strings, you will see five list items).

Once you have completed these exercises add them to Github.

